export class Source {
    constructor(spec, zone, monitor) {
        this.spec = spec;
        this.zone = zone;
        this.monitor = monitor;
    }
    withChangeDetection(fn) {
        let x = fn();
        this.zone.scheduleMicroTask('DragSource', () => { });
        return x;
    }
    canDrag() {
        if (!this.spec.canDrag) {
            return true;
        }
        return this.withChangeDetection(() => {
            return this.spec.canDrag && this.spec.canDrag(this.monitor) || false;
        });
    }
    isDragging(globalMonitor, sourceId) {
        if (!this.spec.isDragging) {
            return sourceId === globalMonitor.getSourceId();
        }
        return this.spec.isDragging(this.monitor);
    }
    beginDrag() {
        return this.withChangeDetection(() => {
            return this.spec.beginDrag(this.monitor);
        });
    }
    endDrag() {
        if (!this.spec.endDrag) {
            return;
        }
        return this.withChangeDetection(() => {
            if (this.spec.endDrag) {
                this.spec.endDrag(this.monitor);
            }
        });
    }
}
export function createSourceFactory(spec, zone) {
    return function createSource(monitor) {
        return new Source(spec, zone, monitor);
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlU291cmNlRmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0ByZWRuYXgvY29yZS8iLCJzb3VyY2VzIjpbInNyYy9saWIvaW50ZXJuYWwvY3JlYXRlU291cmNlRmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFJQSxNQUFNLE9BQU8sTUFBTTtJQUNmLFlBQ1ksSUFBeUIsRUFDekIsSUFBVSxFQUNWLE9BQW9DO1FBRnBDLFNBQUksR0FBSixJQUFJLENBQXFCO1FBQ3pCLFNBQUksR0FBSixJQUFJLENBQU07UUFDVixZQUFPLEdBQVAsT0FBTyxDQUE2QjtJQUVoRCxDQUFDO0lBRUQsbUJBQW1CLENBQUksRUFBVztRQUM5QixJQUFJLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQTtRQUNaLElBQUksQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsWUFBWSxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ3JELE9BQU8sQ0FBQyxDQUFDO0lBQ2IsQ0FBQztJQUVELE9BQU87UUFDSCxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDcEIsT0FBTyxJQUFJLENBQUM7U0FDZjtRQUVELE9BQU8sSUFBSSxDQUFDLG1CQUFtQixDQUFDLEdBQUcsRUFBRTtZQUNqQyxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxLQUFLLENBQUM7UUFDekUsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsVUFBVSxDQUFDLGFBQWtCLEVBQUUsUUFBYTtRQUN4QyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUU7WUFDdkIsT0FBTyxRQUFRLEtBQUssYUFBYSxDQUFDLFdBQVcsRUFBRSxDQUFDO1NBQ25EO1FBRUQsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDOUMsQ0FBQztJQUVELFNBQVM7UUFDTCxPQUFPLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxHQUFHLEVBQUU7WUFDakMsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDN0MsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsT0FBTztRQUNILElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNwQixPQUFPO1NBQ1Y7UUFFRCxPQUFPLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxHQUFHLEVBQUU7WUFDakMsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRTtnQkFDbkIsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO2FBQ25DO1FBQ0wsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0NBQ0o7QUFFRCxNQUFNLFVBQVUsbUJBQW1CLENBQUMsSUFBeUIsRUFBRSxJQUFVO0lBQ3JFLE9BQU8sU0FBUyxZQUFZLENBQUMsT0FBMEI7UUFDbkQsT0FBTyxJQUFJLE1BQU0sQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQzNDLENBQUMsQ0FBQTtBQUNMLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEcmFnU291cmNlIH0gZnJvbSAnZG5kLWNvcmUnO1xuaW1wb3J0IHsgRHJhZ1NvdXJjZVNwZWMgfSBmcm9tICcuLi9kcmFnLXNvdXJjZS1zcGVjaWZpY2F0aW9uJztcbmltcG9ydCB7IERyYWdTb3VyY2VNb25pdG9yIH0gZnJvbSAnLi4vc291cmNlLW1vbml0b3InO1xuXG5leHBvcnQgY2xhc3MgU291cmNlIGltcGxlbWVudHMgRHJhZ1NvdXJjZSB7XG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIHByaXZhdGUgc3BlYzogRHJhZ1NvdXJjZVNwZWM8YW55PixcbiAgICAgICAgcHJpdmF0ZSB6b25lOiBab25lLFxuICAgICAgICBwcml2YXRlIG1vbml0b3I6IERyYWdTb3VyY2VNb25pdG9yPGFueSwgYW55PixcbiAgICApIHtcbiAgICB9XG5cbiAgICB3aXRoQ2hhbmdlRGV0ZWN0aW9uPFQ+KGZuOiAoKSA9PiBUKTogVCB7XG4gICAgICAgIGxldCB4ID0gZm4oKVxuICAgICAgICB0aGlzLnpvbmUuc2NoZWR1bGVNaWNyb1Rhc2soJ0RyYWdTb3VyY2UnLCAoKSA9PiB7IH0pO1xuICAgICAgICByZXR1cm4geDtcbiAgICB9XG5cbiAgICBjYW5EcmFnKCkge1xuICAgICAgICBpZiAoIXRoaXMuc3BlYy5jYW5EcmFnKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0aGlzLndpdGhDaGFuZ2VEZXRlY3Rpb24oKCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuc3BlYy5jYW5EcmFnICYmIHRoaXMuc3BlYy5jYW5EcmFnKHRoaXMubW9uaXRvcikgfHwgZmFsc2U7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGlzRHJhZ2dpbmcoZ2xvYmFsTW9uaXRvcjogYW55LCBzb3VyY2VJZDogYW55KSB7XG4gICAgICAgIGlmICghdGhpcy5zcGVjLmlzRHJhZ2dpbmcpIHtcbiAgICAgICAgICAgIHJldHVybiBzb3VyY2VJZCA9PT0gZ2xvYmFsTW9uaXRvci5nZXRTb3VyY2VJZCgpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRoaXMuc3BlYy5pc0RyYWdnaW5nKHRoaXMubW9uaXRvcik7XG4gICAgfVxuXG4gICAgYmVnaW5EcmFnKCkge1xuICAgICAgICByZXR1cm4gdGhpcy53aXRoQ2hhbmdlRGV0ZWN0aW9uKCgpID0+IHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnNwZWMuYmVnaW5EcmFnKHRoaXMubW9uaXRvcik7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGVuZERyYWcoKSB7XG4gICAgICAgIGlmICghdGhpcy5zcGVjLmVuZERyYWcpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0aGlzLndpdGhDaGFuZ2VEZXRlY3Rpb24oKCkgPT4ge1xuICAgICAgICAgICAgaWYgKHRoaXMuc3BlYy5lbmREcmFnKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zcGVjLmVuZERyYWcodGhpcy5tb25pdG9yKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU291cmNlRmFjdG9yeShzcGVjOiBEcmFnU291cmNlU3BlYzxhbnk+LCB6b25lOiBab25lKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIGNyZWF0ZVNvdXJjZShtb25pdG9yOiBEcmFnU291cmNlTW9uaXRvcik6IERyYWdTb3VyY2Uge1xuICAgICAgICByZXR1cm4gbmV3IFNvdXJjZShzcGVjLCB6b25lLCBtb25pdG9yKTtcbiAgICB9XG59XG4iXX0=