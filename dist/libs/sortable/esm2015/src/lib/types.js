export class Size {
    constructor(width, height) {
        this.width = width;
        this.height = height;
    }
    style() {
        return {
            width: this.width + 'px',
            height: this.height + 'px',
        };
    }
}
export var HoverTrigger;
(function (HoverTrigger) {
    HoverTrigger["halfway"] = "halfway";
    HoverTrigger["fixed"] = "fixed";
})(HoverTrigger || (HoverTrigger = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9saWJzL3NvcnRhYmxlL3NyYy9saWIvdHlwZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBdUhBLE1BQU0sT0FBTyxJQUFJO0lBQ2IsWUFBbUIsS0FBYSxFQUFTLE1BQWM7UUFBcEMsVUFBSyxHQUFMLEtBQUssQ0FBUTtRQUFTLFdBQU0sR0FBTixNQUFNLENBQVE7SUFBRyxDQUFDO0lBQzNELEtBQUs7UUFDRCxPQUFPO1lBQ0gsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSTtZQUN4QixNQUFNLEVBQUUsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJO1NBQzdCLENBQUM7SUFDTixDQUFDO0NBQ0o7QUFnQkQsTUFBTSxDQUFOLElBQVksWUFHWDtBQUhELFdBQVksWUFBWTtJQUNwQixtQ0FBbUIsQ0FBQTtJQUNuQiwrQkFBZSxDQUFBO0FBQ25CLENBQUMsRUFIVyxZQUFZLEtBQVosWUFBWSxRQUd2QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IERyb3BUYXJnZXRNb25pdG9yLCBEcmFnU291cmNlTW9uaXRvciB9IGZyb20gJ0ByZWRuYXgvY29yZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU29ydGFibGVTcGVjPERhdGEsIFR5cGUgPSBzdHJpbmcgfCBzeW1ib2w+IHtcbiAgICAvKiogVGhlIHVuZGVybHlpbmcgQHJlZG5heC9jb3JlIC8gZG5kLWNvcmUgdHlwZS5cbiAgICAgKiBTdHJpbmcgb3Igc3ltYm9sLCBpZiB0aGF0J3Mgbm90IGNsZWFyIGZyb20gdGhlIGRvY3VtZW50YXRpb24gb3V0cHV0Li4gKi9cbiAgICB0eXBlOiBUeXBlO1xuXG4gICAgLyoqIEJ5IGRlZmF1bHQsIGEgc29ydGFibGUgYWNjZXB0cyB0aGUgdHlwZSBpdCBwcm9kdWNlcy4gQnV0IHlvdSBjb3VsZCBoYXZlXG4gICAgICogaXQgYWNjZXB0IG1vcmUgdHlwZXMuIEJlIHN1cmUgdG8gaW5jbHVkZSBgdHlwZWAgaWYgeW91IHdhbnQgdG8gc29ydCBhXG4gICAgICogbGlzdCB3aXRoaW4gaXRzZWxmLlxuICAgICAqXG4gICAgICogVGhpcyBvcGVucyB1cCBvdGhlciBwb3NzaWJpbGl0aWVzOiBpZiB5b3Ugc2V0IGB0eXBlYCB0byBgXCJBXCJgIGJ1dFxuICAgICAqIGBhY2NlcHRzYCB0byBgXCJCXCJgLCB5b3UgY291bGQgYWxsb3cgZHJhZ2dpbmcgYFwiQlwiYHMgaW50byBpdCBidXQgbm90XG4gICAgICogc29ydGluZyB3aXRoaW4gdGhlIGxpc3QuICovXG4gICAgYWNjZXB0cz86IHN0cmluZyB8IHN5bWJvbCB8IChzdHJpbmcgfCBzeW1ib2wpW107XG5cbiAgICAvKiogVXNlZCBmb3IgZXh0ZXJuYWwgZGF0YSBzb3VyY2VzIG9ubHkuXG4gICAgICpcbiAgICAgKiBNdXN0IHByb2R1Y2UgYSBuZXcgb2JqZWN0LCB3aXRoIHNvbWUgRGF0YSB3aGljaCB3aWxsIGJlIHVuaXF1ZSBmb3IgdGhlIGdpdmVuIHRyYWNrQnkgZnVuY3Rpb24uICovXG4gICAgY3JlYXRlRGF0YT8oKTogRGF0YTtcblxuICAgIC8qKiBSZXF1aXJlZC4gTXVzdCBwcm9kdWNlIGEgZGlmZmVyZW50IHZhbHVlIGZvciBldmVyeSBhdmFpbGFibGUgRGF0YS5cbiAgICAgKiAgVXN1YWxseSwgdGhpcyB3aWxsIGJlIGBkYXRhID0+IGRhdGEuaWRgLiAqL1xuICAgIHRyYWNrQnkoZGF0YTogRGF0YSk6IGFueTtcblxuICAgIC8qKiBPcHRpb25hbCBpZiB5b3UgcHJvdmlkZWQgYFtzc1NvcnRhYmxlQ2hpbGRyZW5dLGAgb3RoZXJ3aXNlIHJlcXVpcmVkLlxuICAgICAqICBOT1RFOiByZXR1cm4gYW4gT2JzZXJ2YWJsZSEgSWYgeW91IGRvbid0IGhhdmUgb25lIGFscmVhZHksIHVzZSBgW3NzU29ydGFibGVDaGlsZHJlbl1gLlxuICAgICAqICBBIHR5cGljYWwgdXNlIGlzIHdpdGggYW4gQG5ncngvc3RvcmU6IGBnZXRMaXN0OiBfbGlzdElkID0+IHRoaXMuc3RvcmUuc2VsZWN0KC4uLilgICovXG4gICAgZ2V0TGlzdD8obGlzdElkOiBhbnkpOiBPYnNlcnZhYmxlPEl0ZXJhYmxlPERhdGE+PjtcblxuICAgIC8qKiBPcHRpb25hbDsgc29tZSBpbXBsZW1lbnRhdGlvbnMgZG8gbm90IG5lZWQgYmVnaW5EcmFnLiAqL1xuICAgIGJlZ2luRHJhZz8oXG4gICAgICAgIGl0ZW06IERyYWdnZWRJdGVtPERhdGE+LFxuICAgICAgICBtb25pdG9yOiBEcmFnU291cmNlTW9uaXRvcjx2b2lkLCB2b2lkPlxuICAgICk6IHZvaWQ7XG5cbiAgICAvKiogUmVxdWlyZWQuXG4gICAgICpcbiAgICAgKiBBZnRlciBgaG92ZXJgLCB0aGUgZWxlbWVudCB5b3UgcGlja2VkIHVwICg9ICp0cmFuc2l0KikgbXVzdCBiZTpcbiAgICAgKlxuICAgICAqIDEuIHVuZGVyIHRoZSBtb3VzZTsgYW5kXG4gICAgICogMi4gYXQgdGhlIGluZGV4IGBpdGVtLmhvdmVyLmluZGV4YCBpbiB0aGUgbGlzdCBpZGVudGlmaWVkIGJ5XG4gICAgICogICAgYGl0ZW0uaG92ZXIubGlzdElkYFxuICAgICAqL1xuICAgIGhvdmVyKFxuICAgICAgICBpdGVtOiBEcmFnZ2VkSXRlbTxEYXRhPixcbiAgICAgICAgbW9uaXRvcjogRHJvcFRhcmdldE1vbml0b3I8RHJhZ2dlZEl0ZW08RGF0YT4+XG4gICAgKTogdm9pZDtcblxuICAgIC8qKiBSZXF1aXJlZDsgYmVjYXVzZSBpZiB5b3UgZG9uJ3QgaGF2ZSBhIGRyb3AgZnVuY3Rpb24sIHdoYXQgYXJlIHlvdSBldmVuIGRvaW5nPyAqL1xuICAgIGRyb3AoXG4gICAgICAgIGl0ZW06IERyYWdnZWRJdGVtPERhdGE+LFxuICAgICAgICBtb25pdG9yOiBEcm9wVGFyZ2V0TW9uaXRvcjxEcmFnZ2VkSXRlbTxEYXRhPj5cbiAgICApOiB2b2lkO1xuXG4gICAgLyoqIFJlcXVpcmVkOyB5b3UgbXVzdCByZXNldCBhbmQgcmVtb3ZlIGFueSB0ZW1wb3JhcmlseSBhZGRlZCBkYXRhIGZyb20gdGhlIGRyYWcuICovXG4gICAgZW5kRHJhZyhcbiAgICAgICAgaXRlbTogRHJhZ2dlZEl0ZW08RGF0YT4sXG4gICAgICAgIG1vbml0b3I6IERyYWdTb3VyY2VNb25pdG9yPERyYWdnZWRJdGVtPERhdGE+PlxuICAgICk6IHZvaWQ7XG5cbiAgICAvKiogT3B0aW9uYWw7IHlvdSBtYXkgb3ZlcnJpZGUgdGhlIGRlZmF1bHQgJ3NhbWUgdHJhY2tCeScgaW1wbGVtZW50YXRpb24uXG4gICAgICpcbiAgICAgKiBpc0RyYWdnaW5nIGRldGVybWluZXMgd2hpY2ggY2FyZCBvbiB0aGUgZ3JvdW5kIHdpbGwgcmVnYXJkIGl0c2VsZiBhc1xuICAgICAqIFwidGhlIHNhbWUgYXMgdGhlIG9uZSBpbiBmbGlnaHRcIi4gSXQgbXVzdCByZXR1cm4gdHJ1ZSBmb3IgZXhhY3RseSBvbmVcbiAgICAgKiBjYXJkIGF0IGEgdGltZSwgYW5kIHRoYXQgY2FyZCBNVVNUIGJlIHBsYWNlZCB1bmRlciB0aGUgbW9zdCByZWNlbnRseVxuICAgICAqIGhvdmVyZWQgRHJhZ2dlZEl0ZW0uXG4gICAgICpcbiAgICAgKiBJZiBpdCBpcyBub3QgaW1wbGVtZW50ZWQgY29ycmVjdGx5LCB0aGVuIGVhY2ggY2FyZCB3aWxsIG5vdCBiZSBhYmxlIHRvXG4gICAgICogZGV0ZXJtaW5lIHdoZXRoZXIgaXQgaXMgdW5kZXIgdGhlIG1vdXNlIChhbmQgdGhlcmVmb3JlIHNob3VsZCBub3QgZW1pdFxuICAgICAqIGhvdmVyIGV2ZW50cyk7IHlvdSB3aWxsIGdldCBhIGRlbHVnZSBvZiBpbmNvcnJlY3QgaG92ZXIgZXZlbnRzLlxuICAgICAqXG4gICAgICogQnkgZGVmYXVsdCwgaXQgaXMgZGVmaW5lZCBhczpcblxuYGBgdHlwZXNjcmlwdFxudHJhY2tCeShncm91bmQpID09PSB0cmFja0J5KGluRmxpZ2h0LmRhdGEpXG5gYGBcblxuICAgICAqIElmIHlvdSB3YW50IHRvIGJlIGFibGUgdG8gY29weSBjYXJkcyBhcm91bmQsIGFuZCB0aGVyZSdzIGFuIGV4dHJhIGNsb25lXG4gICAgICogaW4gdHJhbnNpdCBhcm91bmQgdGhlIGJvYXJkLCB5b3UgaGF2ZSB0byBiZSBjYXJlZnVsIHRvIGltcGxlbWVudFxuICAgICAqIGlzRHJhZ2dpbmcgY29ycmVjdGx5LCBvciBlbnN1cmUgdGhhdCBhbnkgY2xvbmVzIGhhdmUgYSBkaWZmZXJlbnRcbiAgICAgKiBgdHJhY2tCeSgpYCByZXN1bHQuIE5vdGUsIGhvd2V2ZXIsIHRoYXQgdGhlIGl0ZW0gaW4gYGJlZ2luRHJhZ2AgaXMgdGhlXG4gICAgICogb3JpZ2luYWwsIHNvIHNpbXBseSBnaXZpbmcgY2xvbmVzIGEgZGlmZmVyZW50IGBpZGAgaXMgbm90IHR5cGljYWxseVxuICAgICAqIGVub3VnaDsgdGhlIGNsb25lIHdpbGwgbm90IHJlc3BvbmQgdG8gYGlzRHJhZ2dpbmdgLCB0aGUgb3JpZ2luYWwgd2lsbFxuICAgICAqIChhbmQgeW91IHdhbnQgdG8gbW92ZSB0aGUgY2xvbmUpLlxuICAgICAqXG4gICAgICogVGhlcmVmb3JlLCBvbmUgc29sdXRpb24gaXMgYXMgZm9sbG93czpcbiAgICAgKlxuYGBgdHlwZXNjcmlwdFxuaXNEcmFnZ2luZzogKGdyb3VuZCwgaW5GbGlnaHQpID0+IHtcbiAgICBsZXQgZmx5aW5nSWQgPSB0aGlzLmlzQ29weWluZyA/IENBUkRfSURfV0hFTl9DT1BZSU5HIDogaW5GbGlnaHQuZGF0YS5pZDtcbiAgICByZXR1cm4gZ3JvdW5kLmlkID09PSBmbHlpbmdJZDtcbn1cbmBgYFxuICAgICAqXG4gICAgICovXG4gICAgaXNEcmFnZ2luZz8oZ3JvdW5kOiBEYXRhLCBpbkZsaWdodDogRHJhZ2dlZEl0ZW08RGF0YT4pOiBib29sZWFuO1xuXG4gICAgLyoqIE9wdGlvbmFsOyB5b3UgbWF5IG92ZXJyaWRlIGRlZmF1bHQgYCgpID0+IHRydWVgLlxuICAgICAqXG4gICAgICogIFdoZW4gdXNlZCB3aXRoIHRoZSBgW3NzRXh0ZXJuYWxdYCBkaXJlY3RpdmUsIHRoZSBmaXJzdCB0d28gYXJndW1lbnRzIHdpbGwgYmUgdW5kZWZpbmVkLFxuICAgICAqICBiZWNhdXNlIHRoZSBkYXRhIGhhcyBub3QgeWV0IGJlZW4gY3JlYXRlZCBhbmQgZXh0ZXJuYWwgaXRlbXMgYXJlIG5vdCBhc3NvY2lhdGVkIHdpdGggYSBsaXN0LlxuICAgICAqICBZb3Ugc2hvdWxkIGJlIGFibGUgdG8gZGVjaWRlIGBjYW5EcmFnYCB3aXRob3V0IHRoZXNlLlxuICAgICAqL1xuICAgIGNhbkRyYWc/KFxuICAgICAgICBkYXRhOiBEYXRhLFxuICAgICAgICBsaXN0SWQ6IGFueSxcbiAgICAgICAgbW9uaXRvcjogRHJhZ1NvdXJjZU1vbml0b3I8dm9pZCwgdm9pZD5cbiAgICApOiBib29sZWFuO1xuXG4gICAgLyoqIE9wdGlvbmFsOyB5b3UgbWF5IG92ZXJyaWRlIGRlZmF1bHQgYCgpID0+IHRydWVgLlxuICAgICAqICBJbnNwZWN0IGBpdGVtLmhvdmVyYCBmb3Igd2hlcmUgaXQgaXMgaG92ZXJpbmcuICovXG4gICAgY2FuRHJvcD8oXG4gICAgICAgIGl0ZW06IERyYWdnZWRJdGVtPERhdGE+LFxuICAgICAgICBtb25pdG9yOiBEcm9wVGFyZ2V0TW9uaXRvcjxEcmFnZ2VkSXRlbTxEYXRhPj5cbiAgICApOiBib29sZWFuO1xufVxuXG5leHBvcnQgY2xhc3MgU2l6ZSB7XG4gICAgY29uc3RydWN0b3IocHVibGljIHdpZHRoOiBudW1iZXIsIHB1YmxpYyBoZWlnaHQ6IG51bWJlcikge31cbiAgICBzdHlsZSgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHdpZHRoOiB0aGlzLndpZHRoICsgJ3B4JyxcbiAgICAgICAgICAgIGhlaWdodDogdGhpcy5oZWlnaHQgKyAncHgnLFxuICAgICAgICB9O1xuICAgIH1cbn1cblxuZXhwb3J0IGludGVyZmFjZSBEcmFnZ2VkSXRlbTxEYXRhPiB7XG4gICAgZGF0YTogRGF0YTtcbiAgICBzaXplOiBTaXplO1xuICAgIHR5cGU6IHN0cmluZyB8IHN5bWJvbDtcbiAgICBpbmRleDogbnVtYmVyO1xuICAgIGxpc3RJZDogYW55O1xuICAgIGlzSW50ZXJuYWw/OiBib29sZWFuO1xuICAgIC8vIGlzQ29weT86IGJvb2xlYW47XG4gICAgaG92ZXI6IHtcbiAgICAgICAgaW5kZXg6IG51bWJlcjtcbiAgICAgICAgbGlzdElkOiBhbnk7XG4gICAgfTtcbn1cblxuZXhwb3J0IGVudW0gSG92ZXJUcmlnZ2VyIHtcbiAgICBoYWxmd2F5ID0gJ2hhbGZ3YXknLFxuICAgIGZpeGVkID0gJ2ZpeGVkJyxcbn1cblxuZXhwb3J0IGludGVyZmFjZSBSZW5kZXJDb250ZXh0PERhdGE+IHtcbiAgICBkYXRhOiBEYXRhO1xuICAgIGluZGV4OiBudW1iZXI7XG4gICAgaG9yaXpvbnRhbDogYm9vbGVhbjtcbiAgICBob3ZlclRyaWdnZXI6IEhvdmVyVHJpZ2dlcjtcbiAgICBsaXN0SWQ6IG51bWJlcjtcbiAgICBzcGVjOiBTb3J0YWJsZVNwZWM8RGF0YT47XG59XG4iXX0=