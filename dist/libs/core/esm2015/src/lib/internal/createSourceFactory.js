export class Source {
    constructor(spec, zone, monitor) {
        this.spec = spec;
        this.zone = zone;
        this.monitor = monitor;
    }
    withChangeDetection(fn) {
        let x = fn();
        this.zone.scheduleMicroTask('DragSource', () => { });
        return x;
    }
    canDrag() {
        if (!this.spec.canDrag) {
            return true;
        }
        return this.withChangeDetection(() => {
            return this.spec.canDrag && this.spec.canDrag(this.monitor) || false;
        });
    }
    isDragging(globalMonitor, sourceId) {
        if (!this.spec.isDragging) {
            return sourceId === globalMonitor.getSourceId();
        }
        return this.spec.isDragging(this.monitor);
    }
    beginDrag() {
        return this.withChangeDetection(() => {
            return this.spec.beginDrag(this.monitor);
        });
    }
    endDrag() {
        if (!this.spec.endDrag) {
            return;
        }
        return this.withChangeDetection(() => {
            if (this.spec.endDrag) {
                this.spec.endDrag(this.monitor);
            }
        });
    }
}
export function createSourceFactory(spec, zone) {
    return function createSource(monitor) {
        return new Source(spec, zone, monitor);
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlU291cmNlRmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvY29yZS9zcmMvbGliL2ludGVybmFsL2NyZWF0ZVNvdXJjZUZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUEsTUFBTSxPQUFPLE1BQU07SUFDZixZQUNZLElBQXlCLEVBQ3pCLElBQVUsRUFDVixPQUFvQztRQUZwQyxTQUFJLEdBQUosSUFBSSxDQUFxQjtRQUN6QixTQUFJLEdBQUosSUFBSSxDQUFNO1FBQ1YsWUFBTyxHQUFQLE9BQU8sQ0FBNkI7SUFFaEQsQ0FBQztJQUVELG1CQUFtQixDQUFJLEVBQVc7UUFDOUIsSUFBSSxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUE7UUFDWixJQUFJLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFlBQVksRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUNyRCxPQUFPLENBQUMsQ0FBQztJQUNiLENBQUM7SUFFRCxPQUFPO1FBQ0gsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFO1lBQ3BCLE9BQU8sSUFBSSxDQUFDO1NBQ2Y7UUFFRCxPQUFPLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxHQUFHLEVBQUU7WUFDakMsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksS0FBSyxDQUFDO1FBQ3pFLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVELFVBQVUsQ0FBQyxhQUFrQixFQUFFLFFBQWE7UUFDeEMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFO1lBQ3ZCLE9BQU8sUUFBUSxLQUFLLGFBQWEsQ0FBQyxXQUFXLEVBQUUsQ0FBQztTQUNuRDtRQUVELE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQzlDLENBQUM7SUFFRCxTQUFTO1FBQ0wsT0FBTyxJQUFJLENBQUMsbUJBQW1CLENBQUMsR0FBRyxFQUFFO1lBQ2pDLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQzdDLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVELE9BQU87UUFDSCxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDcEIsT0FBTztTQUNWO1FBRUQsT0FBTyxJQUFJLENBQUMsbUJBQW1CLENBQUMsR0FBRyxFQUFFO1lBQ2pDLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUU7Z0JBQ25CLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQzthQUNuQztRQUNMLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztDQUNKO0FBRUQsTUFBTSxVQUFVLG1CQUFtQixDQUFDLElBQXlCLEVBQUUsSUFBVTtJQUNyRSxPQUFPLFNBQVMsWUFBWSxDQUFDLE9BQTBCO1FBQ25ELE9BQU8sSUFBSSxNQUFNLENBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQztJQUMzQyxDQUFDLENBQUE7QUFDTCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRHJhZ1NvdXJjZSB9IGZyb20gJ2RuZC1jb3JlJztcbmltcG9ydCB7IERyYWdTb3VyY2VTcGVjIH0gZnJvbSAnLi4vZHJhZy1zb3VyY2Utc3BlY2lmaWNhdGlvbic7XG5pbXBvcnQgeyBEcmFnU291cmNlTW9uaXRvciB9IGZyb20gJy4uL3NvdXJjZS1tb25pdG9yJztcblxuZXhwb3J0IGNsYXNzIFNvdXJjZSBpbXBsZW1lbnRzIERyYWdTb3VyY2Uge1xuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBwcml2YXRlIHNwZWM6IERyYWdTb3VyY2VTcGVjPGFueT4sXG4gICAgICAgIHByaXZhdGUgem9uZTogWm9uZSxcbiAgICAgICAgcHJpdmF0ZSBtb25pdG9yOiBEcmFnU291cmNlTW9uaXRvcjxhbnksIGFueT4sXG4gICAgKSB7XG4gICAgfVxuXG4gICAgd2l0aENoYW5nZURldGVjdGlvbjxUPihmbjogKCkgPT4gVCk6IFQge1xuICAgICAgICBsZXQgeCA9IGZuKClcbiAgICAgICAgdGhpcy56b25lLnNjaGVkdWxlTWljcm9UYXNrKCdEcmFnU291cmNlJywgKCkgPT4geyB9KTtcbiAgICAgICAgcmV0dXJuIHg7XG4gICAgfVxuXG4gICAgY2FuRHJhZygpIHtcbiAgICAgICAgaWYgKCF0aGlzLnNwZWMuY2FuRHJhZykge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdGhpcy53aXRoQ2hhbmdlRGV0ZWN0aW9uKCgpID0+IHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnNwZWMuY2FuRHJhZyAmJiB0aGlzLnNwZWMuY2FuRHJhZyh0aGlzLm1vbml0b3IpIHx8IGZhbHNlO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBpc0RyYWdnaW5nKGdsb2JhbE1vbml0b3I6IGFueSwgc291cmNlSWQ6IGFueSkge1xuICAgICAgICBpZiAoIXRoaXMuc3BlYy5pc0RyYWdnaW5nKSB7XG4gICAgICAgICAgICByZXR1cm4gc291cmNlSWQgPT09IGdsb2JhbE1vbml0b3IuZ2V0U291cmNlSWQoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0aGlzLnNwZWMuaXNEcmFnZ2luZyh0aGlzLm1vbml0b3IpO1xuICAgIH1cblxuICAgIGJlZ2luRHJhZygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMud2l0aENoYW5nZURldGVjdGlvbigoKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5zcGVjLmJlZ2luRHJhZyh0aGlzLm1vbml0b3IpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBlbmREcmFnKCkge1xuICAgICAgICBpZiAoIXRoaXMuc3BlYy5lbmREcmFnKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdGhpcy53aXRoQ2hhbmdlRGV0ZWN0aW9uKCgpID0+IHtcbiAgICAgICAgICAgIGlmICh0aGlzLnNwZWMuZW5kRHJhZykge1xuICAgICAgICAgICAgICAgIHRoaXMuc3BlYy5lbmREcmFnKHRoaXMubW9uaXRvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVNvdXJjZUZhY3Rvcnkoc3BlYzogRHJhZ1NvdXJjZVNwZWM8YW55Piwgem9uZTogWm9uZSkge1xuICAgIHJldHVybiBmdW5jdGlvbiBjcmVhdGVTb3VyY2UobW9uaXRvcjogRHJhZ1NvdXJjZU1vbml0b3IpOiBEcmFnU291cmNlIHtcbiAgICAgICAgcmV0dXJuIG5ldyBTb3VyY2Uoc3BlYywgem9uZSwgbW9uaXRvcik7XG4gICAgfVxufVxuIl19